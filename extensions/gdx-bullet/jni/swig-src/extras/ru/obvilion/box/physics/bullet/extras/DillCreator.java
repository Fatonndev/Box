/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.obvilion.box.physics.bullet.extras;

import ru.obvilion.box.physics.bullet.BulletBase;
import ru.obvilion.box.physics.bullet.linearmath.*;
import ru.obvilion.box.physics.bullet.collision.*;
import ru.obvilion.box.physics.bullet.dynamics.*;
import ru.obvilion.box.physics.bullet.inversedynamics.MultiBodyTree;
import ru.obvilion.box.physics.bullet.dynamics.btDynamicsWorld;
import ru.obvilion.box.physics.bullet.dynamics.btContactSolverInfo;
import ru.obvilion.box.physics.bullet.collision.btCollisionShape;

public class DillCreator extends MultiBodyTreeCreator {
	private long swigCPtr;
	
	protected DillCreator(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, ExtrasJNI.DillCreator_SWIGUpcast(cPtr), cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	/** Construct a new DillCreator, normally you should not need this constructor it's intended for low-level usage. */
	public DillCreator(long cPtr, boolean cMemoryOwn) {
		this("DillCreator", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(ExtrasJNI.DillCreator_SWIGUpcast(swigCPtr = cPtr), cMemoryOwn);
	}
	
	public static long getCPtr(DillCreator obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				ExtrasJNI.delete_DillCreator(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public DillCreator(int levels) {
    this(ExtrasJNI.new_DillCreator(levels), true);
  }

}
